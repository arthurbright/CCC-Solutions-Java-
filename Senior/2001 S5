import java.io.*;
import java.util.*;

public class Solution {

	

	public static void main(String[] args) throws IOException
	{
		Scanner sc = new Scanner(System.in);
		
		//getting m and n
		int m = sc.nextInt();
		int n = sc.nextInt();
		sc.nextLine();
		
		//creating the arrays of the strings
		String[] A = new String[n];
		String[] B = new String[n];
		for(int i = 0; i < n; i ++)
		{
			A[i] = sc.nextLine();
		}
		for(int i = 0; i < n; i ++)
		{
			B[i] = sc.nextLine();
		}
		
		
		//create a list of possibilities to check with each iteration
		Queue<String> toDoA = new LinkedList<String>();
		Queue<String> toDoB = new LinkedList<String>();
		Queue<String> nextToDoA = new LinkedList<String>();
		Queue<String> nextToDoB = new LinkedList<String>();
		
		
		//pad each string with spaces so it is easy to split at the end
		for(int i = 0; i < n; i ++)
		{
			if(sameStart(A[i], B[i]))
			{
				if(A[i].equals(B[i]))
				{
					System.out.println(1);
					System.out.println(i + 1);
					System.exit(0);
				}
				toDoA.add(A[i] + " ");
				toDoB.add(B[i] + " ");
			}
		}
		//loop through the rest of the strings
		String curA;
		String curB;
		String ans = null;
		for(int i = 2; i <= m; i ++)
		{
			while(!toDoA.isEmpty())
			{
				curA = toDoA.poll();
				curB = toDoB.poll();

				//test adding each string to the to Do list
				for(int k = 0; k < n; k ++)
				{
					
					if(sameStart(removeSpace(curA + A[k]), removeSpace(curB + B[k])))
					{
						if((removeSpace(curA + A[k])).equals(removeSpace(curB + B[k])))
						{
							ans = curA + A[k];
							System.out.println(i);
							break;
						}
						nextToDoA.add(curA + A[k] + " ");
						nextToDoB.add(curB + B[k] + " ");
					}
				}
			}
			toDoA = nextToDoA;
			toDoB = nextToDoB;
			
			nextToDoA = new LinkedList<String>();
			nextToDoB = new LinkedList<String>();
			
			
			
			if(ans != null)
			{
				break;
			}
		}
		
		
		
		
		if(ans == null)
		{
			System.out.println("No solution.");
			System.exit(0);
		}
		String[] words = ans.split(" ");
		for(String word: words)
		{
			for(int i = 0; i < n; i ++)
			{
				if(A[i].equals(word))
				{
					System.out.println(i + 1);
					break;
				}
			}
		}
		
		
	}
	
	//helper function that checks if two strings can even satisfy the requirements
	public static boolean sameStart(String a, String b)
	{
		return a.indexOf(b) == 0 || b.indexOf(a) == 0;
	}
	
	//helper function to remove spaces
	public static String removeSpace(String str)
	{
		return str.replaceAll(" ", "");
	}
	


}
