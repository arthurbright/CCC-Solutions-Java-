import java.util.*;
import java.io.*;

public class CCC {

	//static int[][] maxWeights;
	static TreeMap<Integer, Integer>[] maxWeights;
	static int[] destinationCities;
	static int destinations, cities, roads;
	static int a, b, maxWeight, k, tempMaxWeight, cur;
	static int[] maxValue;
	static boolean[] visited;
	static BufferedReader br;
	static String[] splitWords;

	public static void main (String[] args) throws IOException
	{
		//variables	
		//Scanner sc = new Scanner(System.in);
		br = new BufferedReader(new InputStreamReader(System.in));
		
		splitWords = br.readLine().split(" ");
		cities = getInt(splitWords[0]);
		roads = getInt(splitWords[1]);
		destinations = getInt(splitWords[2]);
		
		
		//maxWeights = new int[cities + 1][cities + 1];
		maxWeights = new TreeMap[cities + 1];
		
		
		destinationCities = new int[destinations];

		//adding roads to graph

		for(int i = 0; i < roads; i ++)
		{
			splitWords = br.readLine().split(" ");
			a = getInt(splitWords[0]);
			b = getInt(splitWords[1]);
			maxWeight = getInt(splitWords[2]);
			
			/*
			if(maxWeight > maxWeights[a][b])
			{
				maxWeights[a][b] = maxWeight;
				maxWeights[b][a] = maxWeight;
			}
			 
*/
			//do the adding here
			if(maxWeights[a] == null) maxWeights[a] = new TreeMap<Integer, Integer>();
			if(maxWeights[b] == null) maxWeights[b] = new TreeMap<Integer, Integer>();
			
			if(maxWeights[a].get(b) == null || maxWeights[a].get(b) < maxWeight)
			{
				maxWeights[a].put(b, maxWeight);
				maxWeights[b].put(a, maxWeight);
			}

		}
		
		
		
		//getting destinations
		for(int i = 0; i < destinations; i ++)
		{
			 
			destinationCities[i] = getInt(br.readLine());

			
		}



		///prims

		maxValue = new int[cities + 1];
		visited = new boolean[cities + 1];

		maxValue[1] = Integer.MAX_VALUE;
		visited[1] = true;



		cur = 1;

		
		while(true)
		{
			visited[cur] = true;
			tempMaxWeight = 0;
			k = cur;
			cur = -1;
			for(int i = 1; i <= cities; i ++)
			{
				try {
					if(maxValue[i] < Math.min(maxValue[k], maxWeights[k].get(i)))
					{
						maxValue[i] = Math.min(maxValue[k], maxWeights[k].get(i));
					}
				}
				catch(Exception e) {}
				
				
				if(maxValue[i] >= tempMaxWeight && !visited[i])
				{
					tempMaxWeight = maxValue[i];
					cur = i;
					
				}
			}

			if(cur == -1)
			{
				break;
			}
		}

		//get the min value
		int min = Integer.MAX_VALUE;
		for(int i = 0; i < destinations; i ++)
		{
			if(min > maxValue[destinationCities[i]])
			{
				min = maxValue[destinationCities[i]];
			}

		}

		System.out.println(min);
	}
	
	public static int getInt(String str) throws IOException
	{
		return Integer.parseInt(str);
	}
}
