import java.util.*;
public class Main {

	static Scanner sc = new Scanner(System.in);
	public static void main(String[] args) {
		
		int cases = sc.nextInt();
		for(int i = 0; i < cases; i ++)
		{
			System.out.println(solve());
		}
	}
	
	public static int solve()
	{
		int numPins = sc.nextInt();
		int numBalls = sc.nextInt();
		int width = sc.nextInt();
		
		int[] pins = new int[numPins];
		
		for(int i = 0; i < numPins; i ++)
		{
			pins[i] = sc.nextInt();
		}
		
		/////////////////////////////assign the sum values
		int[] sums = new int[numPins];
		
		//first width - 1 values
		sums[0] = pins[0];
		for(int i = 1; i < width - 1; i ++)
		{
			sums[i] = pins[i] + sums[i - 1];
		}
		
		//the rest of the values
		int acc;
		for(int i = width - 1; i < numPins; i ++)
		{
			acc = 0;
			for(int k = 0; k < width; k ++)
			{
				acc += pins[i - k];
			}
			sums[i] = acc;
		}
		
		
		///////////////////dynamic programming
		int[][] grid = new int[numBalls + 1][numPins];
		
		
		//assign first columns to default value
		for(int i = 1; i <= numBalls; i ++)
		{
			for(int k = 0; k < width; k ++)
			{
				grid[i][k] = sums[k];
			}
		}
		
		for(int i = 1; i <= numBalls; i ++)
		{
			for(int k = width; k < numPins; k ++)
			{
				grid[i][k] = Math.max(grid[i][k - 1], sums[k] + grid[i - 1][k - width]);
			}
		}
		
		return grid[numBalls][numPins - 1];
		
	}

}
